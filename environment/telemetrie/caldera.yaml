# Configuration for a metric measuring bytes sent from a server
# to a client
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: calderasend
  namespace: battlefield
spec:
  compiledTemplate: metric
  params:
    value: connection.sent.bytes | 0 # uses a TCP-specific attribute
    dimensions:
      source_service: source.workload.name | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_version: destination.labels["version"] | "unknown"
    monitoredResourceType: '"UNSPECIFIED"'
---
# Configuration for a metric measuring bytes sent from a client
# to a server
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: calderarcv
  namespace: battlefield
spec:
  compiledTemplate: metric
  params:
    value: connection.received.bytes | 0 # uses a TCP-specific attribute
    dimensions:
      source_service: source.workload.name | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_version: destination.labels["version"] | "unknown"
    monitoredResourceType: '"UNSPECIFIED"'
---
# Configuration for a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: calderahandler
  namespace: battlefield
spec:
  compiledAdapter: prometheus
  params:
    metrics:
    - name: caldera_sent_bytes # Prometheus metric name
      instance_name: caldera.instance.battlefield # Mixer instance name (fully-qualified)
      kind: COUNTER
      label_names:
      - source_service
      - source_version
      - destination_version
    - name: caldera_received_bytes # Prometheus metric name
      instance_name: caldera.instance.battlefield # Mixer instance name (fully-qualified)
      kind: COUNTER
      label_names:
      - source_service
      - source_version
      - destination_version
---
# Rule to send metric instances to a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: calderaprom
  namespace: battlefield
spec:
  match: context.protocol == "tcp"
         && destination.service.host == "caldera.battlefield.svc.cluster.local"
  actions:
  - handler: calderahandler
    instances:
    - calderasend
    - calderarcv